<<<<<<< HEAD
<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Editor extends CI_Controller {    public function __construct() {        parent::__construct();        $this->load->model("Editor/GestorSlideModel");        $this->load->model("Editor/GestorGaleriaModel");        $this->load->model("Editor/Carreras_Model");    }    public function home() {        //echo 'Porfavor :) Aqui va el admin del editor';        $this->load->view('BackEnd/Editor/EditorPerfilView');    }    public function slider() {        // echo "Esto es la gestion del slider.";        // llamar al modelo para mostrar los Slide actuales        $datos['sliders'] = $this->GestorSlideModel->todosSlideModel();        $this->load->view('BackEnd/Editor/EditorSlideView', $datos);            }    public function carreras()    {        $datos['categorias'] = $this->Carreras_Model->listarCategorias();        $this->load->view('BackEnd/Editor/EditorCarrerasView',$datos);    }    public function galeria()    {        $datos['imagenes'] = $this->GestorGaleriaModel->todosGaleriaModel();        $this->load->view('BackEnd/Editor/EditorGaleriaView',$datos);    }    public function insertarDatos()    {        $FkCategoria = $this->input->post('categoria');        $clave = $this->input->post('clave');        $carrera = $this->input->post('carrera');        $imagen = $this->input->post('imagen');        $costo = $this->input->post('costo');        $apertura = $this->input->post('apertura');        $duracion = $this->input->post('duracion');        $presentacion = $this->input->post('presentacion');        $descripcion = $this->input->post('descripcion');        $perfilIngreso = $this->input->post('perfilIngreso');        $perfilEgreso = $this->input->post('perfilEgreso');        $datosCarrera = array(            'carrera' => $carrera,            'clave' => $clave,            'FkCategoria' => $FkCategoria        );        if($this->Carreras_Model->insertarCarrera($datosCarrera) == true)        {            echo "datos insertados";        }        else        {            echo "datos no insertados";        }        exit;        $datos['categorias'] = $this->Carreras_Model->listarCategorias();        $this->load->view('BackEnd/Editor/EditorCarrerasView',$datos);    }}
=======
<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Editor extends CI_Controller {    public function __construct() {        parent::__construct();        $this->load->model("Editor/GestorSlideModel");        $this->load->model("Editor/Carreras_Model");        $this->load->library('form_validation');    }    public function home() {        //echo 'Porfavor :) Aqui va el admin del editor';        $this->load->view('BackEnd/Editor/EditorPerfilView');    }    public function slider() {        // echo "Esto es la gestion del slider.";        // llamar al modelo para mostrar los Slide actuales        $datos['sliders'] = $this->GestorSlideModel->todosSlideModel();        $this->load->view('BackEnd/Editor/EditorSlideView', $datos);            }    public function carreras()    {        $datos['categorias'] = $this->Carreras_Model->listarCategorias();        $datos['carreras'] = $this->Carreras_Model->listarCarrera();        $datos['msg'] = '';        $this->load->view('BackEnd/Editor/EditorCarrerasView',$datos);    }    public function mostrarCarreras()    {        if ($this->input->is_ajax_request())        {            $buscar = $this->input->post('buscar');            $categoria = $this->input->post('categoria');            $datos = $this->Carreras_Model->listarPorCategoria($buscar,$categoria);            echo json_encode($datos);        }else{        $datos['carreras'] = $this->Carreras_Model->listarAllCarrerras();        $datos['categorias'] = $this->Carreras_Model->listarCategorias();        $this->load->view('BackEnd/Editor/MostrarCarrerasView',$datos);}    }    public function mostrarCarrerasSelect()    {        if ($this->input->is_ajax_request())        {            $categoria = $this->input->post('categoria');            $datos = $this->Carreras_Model->listarPorCategoriaSelect($categoria);            echo json_encode($datos);        }else{            show_404();}    }    public function actualizarCarrera(){      if ($this->input->is_ajax_request()) {            $this->form_validation->set_rules('updateCarrera', 'carrea', 'required');            $this->form_validation->set_rules('updateCosto', 'costo', 'required');            $this->form_validation->set_rules('updateApertura', 'apertura', 'required');            $this->form_validation->set_rules('updateDuracion', 'duracion', 'required');            $this->form_validation->set_rules('updatePresentacion', 'presentacion', 'required');            $this->form_validation->set_rules('updateDescripcion', 'descripcion', 'required');            $this->form_validation->set_rules('updatePerfilIngreso', 'perfil ingreso', 'required');            $this->form_validation->set_rules('updatePerfilEgreso', 'perfil egreso', 'required');            $this->form_validation->set_message('required', 'El campo %s es obligatorio');            if ($this->form_validation->run() != false) { //Si la validación es correcta                $carrera = $this->input->post('updateCarrera');                $clave = $this->input->post('updateClave');                $PkCarrera = $this->input->post('PkCarrera');                $costo = $this->input->post('updateCosto');                $apertura = $this->input->post('updateApertura');                $duracion = $this->input->post('updateDuracion');                $presentacion = $this->input->post('updatePresentacion');                $descripcion = $this->input->post('updateDescripcion');                $perfilIngreso = $this->input->post('updatePerfilIngreso');                $perfilEgreso = $this->input->post('updatePerfilEgreso');                if (!empty($_FILES["updateImagen"]["tmp_name"])) {                    $img = $clave . ".jpg";                    $config['upload_path'] = './public/images/courses/';                    $config['allowed_types'] = 'jpg|png|jpeg';                    $config['max_size'] = '2000000';                    $config['file_name'] = $img;                    $this->load->library('upload', $config);                    if(unlink('./public/images/courses/ADE.jpg'))                    {                    if (!$this->upload->do_upload('updateImagen')) {                        echo "La imagen debe de tener una extencion png|jpg|jpeg";                        exit;                    }                    }                }                            $datosCarrera = array(                                'carrera' => $carrera,                            );                            if($this->Carreras_Model->updateCarrera($datosCarrera,$clave) == true){                                $detalleCarrera = array(                                    'presentacion' => $presentacion,                                    'descripcion' => $descripcion,                                    'perfilEgreso' => $perfilEgreso,                                    'perfilIngreso' => $perfilIngreso,                                    'colegiatura' => $costo,                                    'apertura' => $apertura,                                    'duracion' => $duracion                                );                                $this->Carreras_Model->updateDetalleCarrera($detalleCarrera,$PkCarrera);                                echo "exito";                            }                            else{                                echo "error";                            }         } else{                echo validation_errors('<li>','</li>');            }        }else {            show_404();        }    }    public function insertarDatos()    {        if ($this->input->is_ajax_request()) {            //name del campo, titulo, restricciones            $this->form_validation->set_rules('clave', 'Clave', 'required');            $this->form_validation->set_rules('carrera', 'carrea', 'required');            $this->form_validation->set_rules('costo', 'costo', 'required');            $this->form_validation->set_rules('apertura', 'apertura', 'required');            $this->form_validation->set_rules('duracion', 'duracion', 'required');            $this->form_validation->set_rules('presentacion', 'presentacion', 'required');            $this->form_validation->set_rules('descripcion', 'descripcion', 'required');            $this->form_validation->set_rules('perfilIngreso', 'perfil ingreso', 'required');            $this->form_validation->set_rules('perfilEgreso', 'perfil egreso', 'required');            $this->form_validation->set_rules('categoria','categoria','required|callback_check_default');            $this->form_validation->set_message('check_default', 'selecciona una %s');            $this->form_validation->set_message('required', 'El campo %s es obligatorio');            if ($this->form_validation->run() != false) { //Si la validación es correcta                    if (!empty($_FILES["imagen"]["tmp_name"])) {                        list($ancho_img, $alto_img) = getimagesize($_FILES["imagen"]["tmp_name"]);                        if ($ancho_img < 1920 || $alto_img < 820) {                            echo "La imagen debe de tener una resolución minima de 1920px * 820px";                        } else {                            $FkCategoria = $this->input->post('categoria');                            $clave = $this->input->post('clave');                            $carrera = $this->input->post('carrera');                            $costo = $this->input->post('costo');                            $apertura = $this->input->post('apertura');                            $duracion = $this->input->post('duracion');                            $presentacion = $this->input->post('presentacion');                            $descripcion = $this->input->post('descripcion');                            $perfilIngreso = $this->input->post('perfilIngreso');                            $perfilEgreso = $this->input->post('perfilEgreso');                            //$ruta = "public/images/courses/" . $clave . ".jpg";                            $img = $clave . ".jpg";                            $config['upload_path'] = './public/images/courses/';                            $config['allowed_types'] = 'jpg|png|jpeg';                            $config['max_size'] = '2000000';                            $config['file_name'] = $img;                            $this->load->library('upload', $config);                            if (!$this->upload->do_upload('imagen')) {                                echo "La imagen debe de tener una extencion png|jpg|jpeg";                            } else {                                $datosCarrera = array(                                    'carrera' => $carrera,                                    'clave' => $clave,                                    'FkCategoria' => $FkCategoria                                );        //insertar en tabla carreras                                if($this->Carreras_Model->carreraNoRepetida($clave)) {                                    $PkCarrera = $this->Carreras_Model->insertarCarrera($datosCarrera);                                    //si se inserto en la tabla carreras                                    if ($PkCarrera) {                                        //array para llenar tabla detalle carrera                                        $detalleCarrera = array(                                            'FkCarrera' => $PkCarrera,                                            'presentacion' => $presentacion,                                            'descripcion' => $descripcion,                                            'perfilEgreso' => $perfilEgreso,                                            'perfilIngreso' => $perfilIngreso,                                            'colegiatura' => $costo,                                            'apertura' => $apertura,                                            'duracion' => $duracion,                                            'imagen' => $img                                        );                                        if ($this->Carreras_Model->insertarDetalleCarrera($detalleCarrera)) {                                            echo "exito";                                        } else {                                            echo "error";                                        }                                    }                                    else{                                        echo "no se registro la carrea";                                    }                                }                                else{                                    echo "repetido";                                }                            }                        }                    }else {                        echo "<li>Ingresa una imagen</li>";                    }            }else{                echo validation_errors('<li>','</li>');            }        }else {            show_404();        }    }    public function nuevaCategoria()    {        if ($this->input->is_ajax_request()) {            $this->form_validation->set_rules('categoria', 'categoria', 'required');            $this->form_validation->set_message('required', 'Es necesario completar el campo');            if ($this->form_validation->run() != false) { //Si la validación es correcta            $categoria = $this->input->post('categoria');            $categoriaInsert = array(                'categoria' => $categoria            );            if($this->Carreras_Model->categoriaNoRepetida($categoria)) {                if($this->Carreras_Model->insertarCategoria($categoriaInsert)){                    echo "exito";                }else{                    echo "error";                }            }else{                echo "repetido";            }        }else{                echo validation_errors('<p>','!!!</p>');            }        }else{            show_404();        }    }    public function insertarOpinion()    {        if ($this->input->is_ajax_request()) {            //name del campo, titulo, restricciones            $this->form_validation->set_rules('opinion', 'Opinion', 'required');            $this->form_validation->set_rules('nombre', 'Nombre', 'required');            $this->form_validation->set_rules('carrera','carrera','required|callback_check_default');            $this->form_validation->set_message('check_default', 'Selecciona una %s');            $this->form_validation->set_message('required', 'El campo %s es obligatorio');            if ($this->form_validation->run() != false) { //Si la validación es correcta                if (!empty($_FILES['imagenOpinion']['name'])) {                      list($ancho_img, $alto_img) = getimagesize($_FILES["imagenOpinion"]["tmp_name"]);                    if ($ancho_img > 530 || $alto_img > 400) {                        echo "La imagen debe de tener una resolución maxima de 111px * 113px";                    } else {                        $opinion = $this->input->post('opinion');                        $nombre = $this->input->post('nombre');                        $carrera = $this->input->post('carrera');                        $calificacion = $this->input->post('calificacion');                        //$ruta = "public/images/courses/" . $clave . ".jpg";                        $img = 'opinion_' . mt_rand(1, 999) . ".jpg";                        $config['upload_path'] = './public/images/courses/opiniones/';                        $config['allowed_types'] = 'jpg|png|jpeg';                        $config['max_size'] = '2000000';                        $config['file_name'] = $img;                        $this->load->library('upload', $config);                        if (!$this->upload->do_upload('imagenOpinion')) {                            echo "La imagen debe de tener una extencion png|jpg|jpeg";                        } else {                            $datos = array(                                'FkCarrera' => $carrera,                                'nombre' => $nombre,                                'puntuacion' => $calificacion,                                'opinion' => $opinion,                                'imagen' => $img                            );                            if ($this->Carreras_Model-> insertarOpinion($datos)) {                                echo "exito";                            } else {                                echo "error";                            }                        }                    }                } else {                        echo "<li>Ingresa una imagen</li>";                    }                } else {                    echo validation_errors('<li>', '</li>');                }            } else {                show_404();            }    }    public function mostrarCategorias(){        if ($this->input->is_ajax_request()) {            $datos = $this->Carreras_Model->listarCategorias();            echo json_encode($datos);        }        else        {            show_404();        }    }    function check_default($opcion)    {            if($opcion == '0')            {                return false;            }        return true;    }}
>>>>>>> 4d073778ab163808553446404dd2fd14550a4cf3
